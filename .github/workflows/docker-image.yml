name: CI/CD - Build & Push Backend Image to GHCR

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: "Versão da imagem (ex: 1.2.3)"
        required: false

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Cache do Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Setup QEMU (multi-arquitetura)
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login no GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Obter versão automática
        id: version
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            VERSION=${{ github.event.inputs.version }}
          else
            LAST_VERSION=$(git tag --sort=-v:refname | head -n 1 | sed 's/v//')
            IFS='.' read -r MAJOR MINOR PATCH <<< "$LAST_VERSION"
            PATCH=$((PATCH + 1))
            VERSION="$MAJOR.$MINOR.$PATCH"
          fi
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "Tag definida: $VERSION"

      - name: Construir e Push da imagem
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/melhorconsulta-api:latest
            ghcr.io/${{ github.repository_owner }}/melhorconsulta-api:v${{ env.version }}

      - name: Criar tag no repositório
        run: |
          git tag v${{ env.version }}
          git push origin v${{ env.version }}
